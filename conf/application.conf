# https://www.playframework.com/documentation/latest/Configuration
# Application Configuration
app {
  env = "development"
  env = ${?APP_ENV}
  domain = "localhost"
  domain = ${?APP_DOMAIN}
}

play.server.http.port = 9000
play.server.http.port = ${?PORT}

# Include security configuration
include "security.conf"

# Enable modules
play.modules.enabled += "modules.SecurityModule"
play.modules.enabled += "modules.DatabaseModule"

# Enable filters
play.filters.enabled += "play.filters.gzip.GzipFilter"

play.http.secret.key = "j2kf02kd92kslf930r9wkj3sd09c1slcf03sdm29"
play.http.secret.key = ${?PLAY_SECRET}

# Database configuration
slick.dbs.default.profile = "slick.jdbc.PostgresProfile$"
slick.dbs.default.db.driver = "org.postgresql.Driver"
slick.dbs.default.db.url = "jdbc:postgresql://localhost:5432/trello"
slick.dbs.default.db.url = ${?DB_URL}
slick.dbs.default.db.user = "postgres"
slick.dbs.default.db.user = ${?DB_USER}
slick.dbs.default.db.password = "postgres"
slick.dbs.default.db.password = ${?DB_PASSWORD}

# Play evolutions
play.evolutions.db.default.enabled = true
play.evolutions.db.default.autoApply = true

# JWT Configuration
jwt {
  secret = "fallback-secret-for-development-only"
  secret = ${?JWT_SECRET}
  expiration {
    hours = 24
    hours = ${?JWT_EXPIRATION_HOURS}
  }
  issuer = "trello-like"
  issuer = ${?JWT_ISSUER}
}

# Cookie Configuration
cookie {
  name = "auth-token"
  name = ${?COOKIE_NAME}
  maxAge = 86400
  maxAge = ${?COOKIE_MAX_AGE}
  secure = true
  httpOnly = true
  sameSite = "none"
}

# Which HttpFilters implementation to use:
play.http.filters = "filters.Filters"

# Disable default CSRF filter (we handle this in our custom filters)
filters.csrf.header.bypassHeaders {
    X-Requested-With = "*"
    Csrf-Token = "nocheck"
}

# Cache configuration for rate limiting
cache.defaultCache = "default"
cache.bindCaches = ["default"]

# Admin account configuration
admin {
    email = ${?ADMIN_EMAIL}
    password = ${?ADMIN_PASSWORD}
    name = ${?ADMIN_NAME}
}

# Custom error handler
play.http.errorHandler = "exception.CustomErrorHandler"

# Link preview api key
linkpreview.api.key = ${?LINK_PREVIEW_API_KEY}